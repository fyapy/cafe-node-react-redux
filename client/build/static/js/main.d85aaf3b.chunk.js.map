{"version":3,"sources":["utils/setAuthToken.js","actions/authAction.js","actions/types.js","validation/isEmpty.js","reducers/authReducer.js","reducers/errorsRducer.js","reducers/homeReducer.js","reducers/cartReducer.js","reducers/panelReducer.js","reducers/index.js","Store.js","components/layouts/Header.js","actions/homeAction.js","components/Categories/CategoryCard.js","components/Products/ProductsCard.js","components/Cart/Cart.js","components/common/Loader.js","components/layouts/Home.js","actions/cartAction.js","actions/productAction.js","components/Panel/PanelNavbar.js","components/Panel/Panel.js","components/Products/AddProduct.js","components/Products/EditProduct.js","validation/Login.js","components/Auth/Login.js","components/Auth/Register.js","components/common/User.js","actions/userAction.js","components/Profile/Profile.js","components/common/PrivateRoute.js","components/Panel/Categories.js","actions/categoriesAction.js","components/Categories/AddCategory.js","components/Categories/EditCategory.js","components/Cart/CartForm.js","components/Cart/CartPage.js","actions/ordersAction.js","components/Orders/Orders.js","components/layouts/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","loginUser","userData","history","dispatch","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","push","catch","err","type","payload","response","errors","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","loginErrors","categories","products","cart","totalPrice","success","category","product","orders","combineReducers","auth","state","arguments","action","objectSpread","home","concat","toConsumableArray","panel","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","apply","Header","isMenuOpen","toggleMenu","_this","setState","logout","e","preventDefault","props","logoutUser","this","isAuth","User","react_default","a","createElement","className","Link","to","onClick","role","href","Component","connect","removeItem","getHomeData","get","CategoryCard","_this$props","scroll","id","src","img","alt","name","ProductsCard","_this$props$product","price","addToCart","Cart","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","_this$props$cart","Loader","Home","call","scrollToProd","scrollTo","ProdRefs","offsetTop","_this2","_this$props$home","common_Loader","Fragment","map","cat","Categories_CategoryCard","cId","ref","input","filter","p","catId","prod","pId","Products_ProductsCard","components_Cart_Cart","prodId","getState","inCart","find","c","quantity","index","findIndex","o","deleteProduct","delete","PanelNavbar","pathname","location","withRouter","Panel","handleDelete","slice","sort","b","Panel_PanelNavbar","data-label","AddProduct","_getPrototypeOf2","_len","args","Array","_key","image","file","ready","crop","refs","cropper","getCroppedCanvas","toDataURL","onChange","defineProperty","target","handleFileChange","URL","createObjectURL","files","onSubmit","_this$state","addProduct","_this$state2","htmlFor","placeholder","autoFocus","react_cropper_default","viewMode","style","width","maxWidth","margin","maxHeight","aspectRatio","guides","cropend","EditProduct","editProduct","getProduct","match","params","prevProps","autoComplete","put","Login","email","password","Validator","isEmail","isValid","_loginValidate","loginValidate","prevState","Register","login","password2","getCurrentProfile","react","Profile","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Categories","deleteCategory","AddCategory","addCategory","EditCategory","editCategory","getCategory","CartForm","touched","isSubmitting","formik_esm","cartNotEmpty","date","time","phone","customersCount","comment","disabled","cartSchema","Yup","shape","oneOf","required","matches","typeError","min","max","withFormik","mapPropsToValues","validationSchema","handleSubmit","values","_ref2","setSubmitting","CartPage","addOrder","items","amount","deleteFromCart","increaseCart","decreaseCart","cartItem","Cart_CartForm","count","el","Orders","getOrders","order","item","iId","productId","Date","orderedOn","toLocaleString","NoMatch","jwtToken","Store","createHistory","App","es","Router","layouts_Header","common_User","Switch","exact","path","common_PrivateRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.d85aaf3b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply to every request\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { SET_LOGIN_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to ls\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(\r\n      err => {}\r\n      // dispatch({\r\n      //   type: GET_ERRORS,\r\n      //   payload: err.response.data\r\n      // })\r\n    );\r\n};\r\n\r\n// Login - Get User Token\r\nexport const loginUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to ls\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n\r\n      history.push(\"/\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: SET_LOGIN_ERRORS,\r\n        payload: err.response.data.errors\r\n      });\r\n    });\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// // Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to {} witch will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const SET_LOGIN_ERRORS = \"SET_LOGIN_ERRORS\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const GET_HOME_DATA = \"GET_HOME_DATA\";\r\nexport const SET_USER = \"SET_USER\";\r\n\r\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const INCREASE_QUANTITY = \"INCREASE_QUANTITY\";\r\nexport const INCREASE_PRICE = \"INCREASE_PRICE\";\r\nexport const DECREASE_PRICE = \"DECREASE_PRICE\";\r\nexport const NEW_CART = \"NEW_CART\";\r\nexport const SUCCESS_CART = \"SUCCESS_CART\";\r\n\r\nexport const GET_CATEGORY = \"GET_CATEGORY\";\r\nexport const GET_PRODUCT = \"GET_PRODUCT\";\r\n\r\nexport const GET_ORDERS = \"GET_ORDERS\";\r\n","const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import isEmpty from \"../validation/isEmpty\";\r\n\r\nimport { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_LOGIN_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loginErrors: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOGIN_ERRORS:\r\n      return {\r\n        ...state,\r\n        loginErrors: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GET_HOME_DATA } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  products: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_HOME_DATA:\r\n      return {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n        products: action.payload.products\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_TO_CART,\r\n  INCREASE_PRICE,\r\n  DECREASE_PRICE,\r\n  INCREASE_QUANTITY,\r\n  NEW_CART,\r\n  SUCCESS_CART\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  cart: [],\r\n  totalPrice: 0,\r\n  success: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.payload]\r\n      };\r\n    case INCREASE_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cart: action.payload\r\n      };\r\n    case INCREASE_PRICE:\r\n      return {\r\n        ...state,\r\n        totalPrice: state.totalPrice + action.payload\r\n      };\r\n    case DECREASE_PRICE:\r\n      return {\r\n        ...state,\r\n        totalPrice: state.totalPrice - action.payload\r\n      };\r\n    case NEW_CART:\r\n      return {\r\n        ...state,\r\n        cart: action.payload\r\n      };\r\n    case SUCCESS_CART:\r\n      return {\r\n        ...state,\r\n        success: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GET_CATEGORY, GET_PRODUCT, GET_ORDERS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  category: null,\r\n  product: null,\r\n  orders: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: action.payload\r\n      };\r\n    case GET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        product: action.payload\r\n      };\r\n    case GET_ORDERS:\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorsReducer from \"./errorsRducer\";\r\nimport homeReducer from \"./homeReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport panelReducer from \"./panelReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorsReducer,\r\n  home: homeReducer,\r\n  cart: cartReducer,\r\n  panel: panelReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport isEmpty from \"../../validation/isEmpty\";\r\nimport { logoutUser } from \"../../actions/authAction\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    isMenuOpen: false\r\n  };\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ isMenuOpen: !this.state.isMenuOpen });\r\n  };\r\n\r\n  logout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { isMenuOpen } = this.state;\r\n    const isAuth = this.props.auth.isAuthenticated;\r\n    const User = this.props.auth.user;\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-7\">\r\n              <Link to=\"/\" className=\"header-logo\">\r\n                Cafe\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-xl-10\">\r\n              <div\r\n                className=\"header-toggle d-xl-none\"\r\n                onClick={this.toggleMenu}\r\n              >\r\n                <i className=\"fas fa-bars\" />\r\n              </div>\r\n              <ul className={`header-list ${isMenuOpen && \"open\"}`}>\r\n                <li className=\"header-list-item\">\r\n                  <Link to=\"/\" className=\"header-list-item-link\">\r\n                    Главная\r\n                  </Link>\r\n                </li>\r\n                <li className=\"header-list-item\">\r\n                  <Link to=\"/cart\" className=\"header-list-item-link\">\r\n                    Корзина\r\n                  </Link>\r\n                </li>\r\n                {!isEmpty(User) && User.role > 7 && (\r\n                  <li className=\"header-list-item\">\r\n                    <Link to=\"/panel\" className=\"header-list-item-link\">\r\n                      Панель\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-xl-7\">\r\n              {isAuth ? (\r\n                <div className=\"header-control\">\r\n                  <Link to=\"/profile\" className=\"header-control-item\">\r\n                    Профиль <i className=\"far fa-user-circle\" />\r\n                  </Link>\r\n                  <a\r\n                    href=\"/logout\"\r\n                    className=\"header-control-item\"\r\n                    onClick={this.logout}\r\n                  >\r\n                    Выйти <i className=\"far fa-sign-out-alt\" />\r\n                  </a>\r\n                </div>\r\n              ) : (\r\n                <div className=\"header-control\">\r\n                  <Link to=\"/login\" className=\"header-control-item\">\r\n                    Вход <i className=\"fal fa-sign-in-alt\" />\r\n                  </Link>\r\n                  <Link to=\"/register\" className=\"header-control-item\">\r\n                    Регистрация <i className=\"fal fa-user-plus\" />\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Header);\r\n","import axios from \"axios\";\r\n\r\nimport { GET_HOME_DATA } from \"./types\";\r\n\r\nexport const getHomeData = () => dispatch => {\r\n  axios.get(\"/api/home\").then(res => {\r\n    dispatch({\r\n      type: GET_HOME_DATA,\r\n      payload: res.data\r\n    });\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CategoryCard extends Component {\r\n  static propTypes = {\r\n    category: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { category, scroll } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-12 col-sm-8 col-lg-3\">\r\n        <a\r\n          href={`/${category.id}`}\r\n          className=\"categories-item\"\r\n          onClick={e => scroll(e, category.id)}\r\n        >\r\n          <img src={`/img/${category.img}`} alt=\"Category\" />\r\n          <div className=\"categories-item-title\">{category.name}</div>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryCard;\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nclass ProductsCard extends Component {\r\n  // static propTypes = {\r\n  // \tprop: PropTypes\r\n  // }\r\n\r\n  render() {\r\n    const { id, name, price, img } = this.props.product;\r\n    const { addToCart } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"col-24 col-sm-12 col-lg-8\"\r\n        onClick={e => addToCart(e, id)}\r\n      >\r\n        <a href=\"/\" className=\"products-item\">\r\n          <img src={`/img/${img}`} alt=\"\" />\r\n          <div className=\"products-item-info\">\r\n            <div className=\"products-item-title\">{name}</div>\r\n            <div className=\"products-item-price\">\r\n              {price} <i className=\"far fa-ruble-sign\" />\r\n            </div>\r\n            <button className=\"products-item-btn\">Заказать</button>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsCard;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Cart extends Component {\r\n  render() {\r\n    const { cart, totalPrice } = this.props.cart;\r\n\r\n    return (\r\n      <Link to=\"/cart\" className=\"cart\">\r\n        <div className=\"cart-title\">\r\n          <i className=\"far fa-shopping-cart\" /> Корзина{\" \"}\r\n          <small>({cart.length} Шт.)</small>\r\n          <span className=\"cart-price\">\r\n            {totalPrice} <i className=\"far fa-ruble-sign\" />\r\n          </span>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cart: state.cart,\r\n  home: state.home\r\n});\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","import React from \"react\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"sk-cube-grid\">\r\n      <div className=\"sk-cube sk-cube1\" />\r\n      <div className=\"sk-cube sk-cube2\" />\r\n      <div className=\"sk-cube sk-cube3\" />\r\n      <div className=\"sk-cube sk-cube4\" />\r\n      <div className=\"sk-cube sk-cube5\" />\r\n      <div className=\"sk-cube sk-cube6\" />\r\n      <div className=\"sk-cube sk-cube7\" />\r\n      <div className=\"sk-cube sk-cube8\" />\r\n      <div className=\"sk-cube sk-cube9\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { getHomeData } from \"../../actions/homeAction\";\r\nimport { addToCart } from \"../../actions/cartAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Components\r\nimport CategoryCard from \"../Categories/CategoryCard\";\r\nimport ProductsCard from \"../Products/ProductsCard\";\r\nimport Cart from \"../Cart/Cart\";\r\nimport Loader from \"../common/Loader\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ProdRefs = [];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getHomeData();\r\n  }\r\n\r\n  scrollToProd = (e, id) => {\r\n    e.preventDefault();\r\n    window.scrollTo(0, this.ProdRefs[id].offsetTop);\r\n  };\r\n\r\n  addToCart = (e, id) => {\r\n    e.preventDefault();\r\n\r\n    this.props.addToCart(id);\r\n  };\r\n\r\n  render() {\r\n    const { categories, products } = this.props.home;\r\n\r\n    return (\r\n      <div>\r\n        {categories.length <= 0 ? (\r\n          <Loader />\r\n        ) : (\r\n          <React.Fragment>\r\n            <div className=\"categories\">\r\n              <div className=\"categories-title\">Категории</div>\r\n              <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                  {categories.map((cat, id) => (\r\n                    <CategoryCard\r\n                      category={cat}\r\n                      key={id}\r\n                      scroll={this.scrollToProd}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"products-wrapper\">\r\n              {categories.map((cat, cId) => (\r\n                <div\r\n                  className=\"products\"\r\n                  key={cId}\r\n                  ref={input => {\r\n                    this.ProdRefs[cat.id] = input;\r\n                  }}\r\n                >\r\n                  <div className=\"products-title\">{cat.name}</div>\r\n                  <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                      {products.filter(p => p.catId === cat.id).length === 0 ? (\r\n                        <div className=\"products-empty\">\r\n                          К сожалению товаров в этой категорий нет.\r\n                        </div>\r\n                      ) : (\r\n                        products\r\n                          .filter(p => p.catId === cat.id)\r\n                          .map((prod, pId) => (\r\n                            <ProductsCard\r\n                              product={prod}\r\n                              key={pId}\r\n                              addToCart={this.addToCart}\r\n                            />\r\n                          ))\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <Cart />\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  home: state.home\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getHomeData, addToCart }\r\n)(Home);\r\n","import isEmpty from \"../validation/isEmpty\";\r\n\r\nimport {\r\n  ADD_TO_CART,\r\n  INCREASE_PRICE,\r\n  DECREASE_PRICE,\r\n  INCREASE_QUANTITY,\r\n  NEW_CART\r\n} from \"./types\";\r\n\r\nexport const addToCart = (prodId, price) => (dispatch, getState) => {\r\n  const inCart = getState().cart.cart.find(c => c.id === prodId);\r\n  const product = getState().home.products.find(p => p.id === prodId);\r\n\r\n  if (isEmpty(inCart)) {\r\n    dispatch({\r\n      type: ADD_TO_CART,\r\n      payload: {\r\n        id: prodId,\r\n        quantity: 1\r\n      }\r\n    });\r\n  } else {\r\n    inCart.quantity++;\r\n    const index = getState().cart.cart.findIndex(o => o.id === prodId);\r\n    let cart = getState().cart.cart;\r\n    cart[index] = inCart;\r\n    dispatch({\r\n      type: INCREASE_QUANTITY,\r\n      payload: cart\r\n    });\r\n  }\r\n\r\n  dispatch({\r\n    type: INCREASE_PRICE,\r\n    payload: product.price\r\n  });\r\n};\r\n\r\nexport const deleteFromCart = id => (dispatch, getState) => {\r\n  const count = getState().cart.cart.find(el => el.id === id).quantity;\r\n  const newCart = getState().cart.cart.filter(el => el.id !== id);\r\n  dispatch({\r\n    type: NEW_CART,\r\n    payload: newCart\r\n  });\r\n\r\n  const product = getState().home.products.find(p => p.id === id);\r\n  dispatch({\r\n    type: DECREASE_PRICE,\r\n    payload: product.price * count\r\n  });\r\n};\r\n\r\nexport const increaseCart = id => (dispatch, getState) => {\r\n  let cart = getState().cart.cart;\r\n  const index = cart.findIndex(el => el.id === id);\r\n  cart[index].quantity++;\r\n  dispatch({\r\n    type: NEW_CART,\r\n    payload: cart\r\n  });\r\n\r\n  const product = getState().home.products.find(p => p.id === id);\r\n  dispatch({\r\n    type: INCREASE_PRICE,\r\n    payload: product.price\r\n  });\r\n};\r\n\r\nexport const decreaseCart = id => (dispatch, getState) => {\r\n  let cart = getState().cart.cart;\r\n  const index = cart.findIndex(el => el.id === id);\r\n  cart[index].quantity--;\r\n  if (cart[index].quantity <= 0) {\r\n    cart = cart.filter(el => el.id !== id);\r\n  }\r\n  dispatch({\r\n    type: NEW_CART,\r\n    payload: cart\r\n  });\r\n\r\n  const product = getState().home.products.find(p => p.id === id);\r\n  dispatch({\r\n    type: DECREASE_PRICE,\r\n    payload: product.price\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport { GET_PRODUCT } from \"./types\";\r\nimport { getHomeData } from \"./homeAction\";\r\n\r\nexport const addProduct = (data, history) => dispatch => {\r\n  axios.post(\"/api/products/add\", data).then(res => {\r\n    if (res.data.success === true) {\r\n      history.push(\"/panel\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const getProduct = id => dispatch => {\r\n  axios.get(`/api/products/${id}`).then(res => {\r\n    dispatch({\r\n      type: GET_PRODUCT,\r\n      payload: res.data.product\r\n    });\r\n  });\r\n};\r\n\r\nexport const editProduct = (id, data, history) => dispatch => {\r\n  axios.put(`/api/products/${id}`, data).then(res => {\r\n    history.push(\"/panel\");\r\n  });\r\n};\r\n\r\nexport const deleteProduct = id => dispatch => {\r\n  axios.delete(`/api/products/${id}`).then(res => {\r\n    dispatch(getHomeData());\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nexport class PanelNavbar extends Component {\r\n  // static propTypes = {\r\n  //   prop: PropTypes\r\n  // };\r\n\r\n  render() {\r\n    const { pathname } = this.props.location;\r\n\r\n    return (\r\n      <ul className=\"panel-navbar\">\r\n        <li className=\"panel-navbar-item\">\r\n          <Link\r\n            to=\"/panel\"\r\n            className={`panel-navbar-link ${pathname === \"/panel\" &&\r\n              \"current\"}`}\r\n          >\r\n            Товары\r\n          </Link>\r\n        </li>\r\n        <li className=\"panel-navbar-item\">\r\n          <Link\r\n            to=\"/panel/categories\"\r\n            className={`panel-navbar-link ${pathname === \"/panel/categories\" &&\r\n              \"current\"}`}\r\n          >\r\n            Категории\r\n          </Link>\r\n        </li>\r\n        <li className=\"panel-navbar-item\">\r\n          <Link\r\n            to=\"/panel/orders\"\r\n            className={`panel-navbar-link ${pathname === \"/panel/orders\" &&\r\n              \"current\"}`}\r\n          >\r\n            Заказы\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PanelNavbar);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getHomeData } from \"../../actions/homeAction\";\r\nimport { deleteProduct } from \"../../actions/productAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Component\r\nimport PanelNavbar from \"./PanelNavbar\";\r\nimport Loader from \"../common/Loader\";\r\n\r\nclass Panel extends Component {\r\n  componentDidMount() {\r\n    this.props.getHomeData();\r\n  }\r\n\r\n  handleDelete = (e, id) => {\r\n    e.preventDefault();\r\n    this.props.deleteProduct(id);\r\n  };\r\n\r\n  render() {\r\n    const products = this.props.home.products\r\n      .slice()\r\n      .sort((a, b) => b.id - a.id);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-24 col-lg-18\">\r\n            <PanelNavbar />\r\n          </div>\r\n          <div className=\"col-24 col-lg-6 d-flex justify-content-end\">\r\n            <Link to=\"/panel/products/add\" className=\"panel-navbar-add\">\r\n              Добавить товар\r\n            </Link>\r\n          </div>\r\n\r\n          {products.length <= 0 ? (\r\n            <Loader />\r\n          ) : (\r\n            <div className=\"col-24\">\r\n              <table className=\"panel-table\">\r\n                <thead className=\"panel-table-head\">\r\n                  <tr>\r\n                    <th className=\"panel-table-head-item\">Номер</th>\r\n                    <th className=\"panel-table-head-item\">Изображение</th>\r\n                    <th className=\"panel-table-head-item\">Название</th>\r\n                    <th className=\"panel-table-head-item\">Цена</th>\r\n                    <th className=\"panel-table-head-item\">Действия</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"panel-table-body\">\r\n                  {products.map((prod, id) => (\r\n                    <tr key={prod.id} className=\"panel-table-body-row\">\r\n                      <th className=\"panel-table-body-item\" data-label=\"Номер\">\r\n                        {prod.id}\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item image\"\r\n                        data-label=\"Изображение\"\r\n                      >\r\n                        <img src={`/img/${prod.img}`} alt=\"Img\" />\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item\"\r\n                        data-label=\"Название\"\r\n                      >\r\n                        {prod.name}\r\n                      </th>\r\n                      <th className=\"panel-table-body-item\" data-label=\"Цена\">\r\n                        {prod.price} <i className=\"far fa-ruble-sign\" />\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item\"\r\n                        data-label=\"Действия\"\r\n                      >\r\n                        <Link\r\n                          to={`/panel/products/edit/${prod.id}`}\r\n                          className=\"panel-table-body-item-increase\"\r\n                        >\r\n                          <i className=\"far fa-edit\" /> Изменить\r\n                        </Link>\r\n                        <span\r\n                          onClick={e => this.handleDelete(e, prod.id)}\r\n                          className=\"panel-table-body-item-delete\"\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" /> Удалить\r\n                        </span>\r\n                      </th>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  home: state.home\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getHomeData, deleteProduct }\r\n)(Panel);\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport Cropper from \"react-cropper\";\r\nimport { addProduct } from \"../../actions/productAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Components\r\nimport PanelNavbar from \"../Panel/PanelNavbar\";\r\n\r\nexport class AddProduct extends Component {\r\n  // static propTypes = {\r\n  //   prop: PropTypes\r\n  // };\r\n\r\n  state = {\r\n    name: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n    file: null,\r\n    catId: null,\r\n    errors: {},\r\n    ready: false\r\n  };\r\n\r\n  crop = () => {\r\n    this.setState({\r\n      image: this.refs.cropper.getCroppedCanvas().toDataURL()\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleFileChange = e => {\r\n    this.setState({\r\n      file: URL.createObjectURL(e.target.files[0]),\r\n      ready: true\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, price, image, catId } = this.state;\r\n    this.props.addProduct(\r\n      {\r\n        name,\r\n        price,\r\n        image,\r\n        catId\r\n      },\r\n      this.props.history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, price, file, errors, ready } = this.state;\r\n    const { categories } = this.props.home;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-24\">\r\n            <PanelNavbar />\r\n          </div>\r\n\r\n          <form className=\"col-24 panel-edit\" onSubmit={this.onSubmit}>\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-lg-8\">\r\n                <div className=\"modal-form-group\">\r\n                  <label htmlFor=\"name\" className=\"modal-form-label\">\r\n                    Название\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Название\"\r\n                    autoFocus={true}\r\n                    onChange={this.onChange}\r\n                    className=\"modal-form-control\"\r\n                  />\r\n                  <div className=\"modal-form-error\">{errors.name}</div>\r\n                </div>\r\n                <div className=\"modal-form-group\">\r\n                  <label htmlFor=\"price\" className=\"modal-form-label\">\r\n                    Цена\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    id=\"price\"\r\n                    placeholder=\"Цена\"\r\n                    value={price}\r\n                    autoFocus={true}\r\n                    onChange={this.onChange}\r\n                    className=\"modal-form-control\"\r\n                  />\r\n                  <div className=\"modal-form-error\">{errors.price}</div>\r\n                </div>\r\n                <div className=\"modal-form-group\">\r\n                  <label htmlFor=\"catId\" className=\"modal-form-label\">\r\n                    Категория\r\n                  </label>\r\n                  <select\r\n                    name=\"catId\"\r\n                    id=\"catId\"\r\n                    onChange={this.onChange}\r\n                    className=\"modal-form-select\"\r\n                  >\r\n                    {categories.map((cat, id) => (\r\n                      <option value={cat.id} key={id}>\r\n                        {cat.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <div className=\"modal-form-error\">{errors.catId}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-8\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"file\"\r\n                    className=\"panel-edit-upload panel-navbar-add\"\r\n                  >\r\n                    Загрузить превью\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"file\"\r\n                    onChange={this.handleFileChange}\r\n                    className=\"d-none\"\r\n                  />\r\n                </div>\r\n                <div className=\"panel-edit-image\">\r\n                  <Cropper\r\n                    ref=\"cropper\"\r\n                    src={file}\r\n                    viewMode={2}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      maxWidth: \"100%\",\r\n                      margin: \"0 auto\",\r\n                      maxHeight: \"200px\"\r\n                    }}\r\n                    aspectRatio={16 / 9}\r\n                    guides={false}\r\n                    cropend={this.crop}\r\n                    ready={this.crop}\r\n                  />\r\n                </div>\r\n                {ready && (\r\n                  <div className=\"modal-form-group\">\r\n                    <button type=\"submit\" className=\"panel-navbar-add\">\r\n                      Добавить товар\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  home: state.home\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProduct }\r\n)(AddProduct);\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from 'prop-types'\r\nimport Cropper from \"react-cropper\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProduct, editProduct } from \"../../actions/productAction\";\r\nimport { getHomeData } from \"../../actions/homeAction\";\r\nimport isEmpty from \"../../validation/isEmpty\";\r\n\r\nexport class EditProduct extends Component {\r\n  // static propTypes = {\r\n  // \tprop: PropTypes\r\n  // }\r\n\r\n  state = {\r\n    name: \"\",\r\n    price: \"\",\r\n    img: \"\",\r\n    catId: \"\",\r\n    file: \"\",\r\n    image: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  crop = () => {\r\n    this.setState({ image: this.refs.cropper.getCroppedCanvas().toDataURL() });\r\n  };\r\n\r\n  handleFileChange = e => {\r\n    this.setState({\r\n      file: URL.createObjectURL(e.target.files[0])\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getProduct(this.props.match.params.id);\r\n    this.props.getHomeData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { product } = this.props.panel;\r\n    const { name } = this.state;\r\n\r\n    if (\r\n      !isEmpty(product) &&\r\n      name !== product.name &&\r\n      product !== prevProps.panel.product\r\n    ) {\r\n      this.setState({\r\n        name: product.name,\r\n        img: `/img/${product.img}`,\r\n        price: product.price,\r\n        catId: product.catId\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, price, catId, image } = this.state;\r\n    const { panel, history } = this.props;\r\n\r\n    this.props.editProduct(\r\n      panel.product.id,\r\n      { name, price, catId, image },\r\n      history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, price, img, file, image, catId, errors } = this.state;\r\n    const { categories } = this.props.home;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"row justify-content-center\" onSubmit={this.onSubmit}>\r\n          <div className=\"col-lg-9\">\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"name\" className=\"modal-form-label\">\r\n                Название\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={name}\r\n                placeholder=\"Название\"\r\n                autoFocus={true}\r\n                onChange={this.onChange}\r\n                autoComplete=\"off\"\r\n                className=\"modal-form-control\"\r\n              />\r\n              <div className=\"modal-form-error\">{errors.name}</div>\r\n            </div>\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"price\" className=\"modal-form-label\">\r\n                Цена\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"price\"\r\n                id=\"price\"\r\n                value={price}\r\n                placeholder=\"Цена\"\r\n                onChange={this.onChange}\r\n                autoComplete=\"off\"\r\n                className=\"modal-form-control\"\r\n              />\r\n              <div className=\"modal-form-error\">{errors.price}</div>\r\n            </div>\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"catId\" className=\"modal-form-label\">\r\n                Категория\r\n              </label>\r\n              <select\r\n                name=\"catId\"\r\n                id=\"catId\"\r\n                value={catId}\r\n                onChange={this.onChange}\r\n                className=\"modal-form-select\"\r\n              >\r\n                {categories.map((cat, id) => (\r\n                  <option value={cat.id} key={id}>\r\n                    {cat.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <div className=\"modal-form-error\">{errors.catId}</div>\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"file\"\r\n                className=\"panel-edit-file panel-navbar-add\"\r\n              >\r\n                Загрузить превью\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"file\"\r\n                onChange={this.handleFileChange}\r\n                className=\"d-none\"\r\n              />\r\n            </div>\r\n            <div className=\"panel-edit-image\">\r\n              <Cropper\r\n                ref=\"cropper\"\r\n                src={file}\r\n                viewMode={2}\r\n                style={{\r\n                  width: \"100%\",\r\n                  maxWidth: \"100%\",\r\n                  margin: \"0 auto\",\r\n                  maxHeight: \"230px\"\r\n                }}\r\n                aspectRatio={16 / 9}\r\n                guides={false}\r\n                cropend={this.crop}\r\n                ready={this.crop}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-8\">\r\n            <div className=\"panel-edit-preview\">\r\n              <img src={isEmpty(image) ? img : image} alt=\"img\" />\r\n            </div>\r\n            <div className=\"modal-form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"panel-edit-upload panel-navbar-add\"\r\n              >\r\n                Изменить товар\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  panel: state.panel,\r\n  home: state.home\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProduct, editProduct, getHomeData }\r\n)(EditProduct);\r\n","import isEmpty from \"./isEmpty\";\r\nimport Validator from \"validator\";\r\n\r\nconst Login = data => {\r\n  let errors = {};\r\n\r\n  data.email = !isEmpty(data.email) ? data.email : \"\";\r\n  data.password = !isEmpty(data.password) ? data.password : \"\";\r\n\r\n  if (!Validator.isEmail(data.email)) {\r\n    errors.email = \"E-mail не корректен\";\r\n  }\r\n\r\n  if (Validator.isEmpty(data.email)) {\r\n    errors.email = \"E-mail пустой\";\r\n  }\r\n\r\n  if (Validator.isEmpty(data.password)) {\r\n    errors.password = \"Пароль пустой\";\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors)\r\n  };\r\n};\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport loginValidate from \"../../validation/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authAction\";\r\n\r\nexport class Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { loginErrors } = this.props.errors;\r\n    if (loginErrors !== prevProps.errors.loginErrors) {\r\n      this.setState({ errors: loginErrors });\r\n    }\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { errors, isValid } = loginValidate(this.state);\r\n\r\n    if (!isValid) {\r\n      return this.setState({ errors });\r\n    }\r\n\r\n    this.props.loginUser(this.state, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { email, password, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <form onSubmit={this.onSubmit} className=\"col-24 col-lg-12\">\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"email\" className=\"modal-form-label\">\r\n                E-mail\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                autoFocus={true}\r\n                onChange={this.onChange}\r\n                className=\"modal-form-control\"\r\n              />\r\n              <div className=\"modal-form-error\">{errors.email}</div>\r\n            </div>\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"password\" className=\"modal-form-label\">\r\n                Пароль\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={this.onChange}\r\n                className=\"modal-form-control\"\r\n              />\r\n              <div className=\"modal-form-error\">{errors.password}</div>\r\n            </div>\r\n            <button className=\"modal-form-btn\">Войти</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport loginValidate from \"../../validation/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authAction\";\r\n\r\nexport class Register extends Component {\r\n  state = {\r\n    login: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { loginErrors } = this.props.errors;\r\n    if (loginErrors !== prevProps.errors.loginErrors) {\r\n      this.setState({ errors: loginErrors });\r\n    }\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { errors, isValid } = loginValidate(this.state);\r\n\r\n    if (!isValid) {\r\n      return this.setState({ errors });\r\n    }\r\n\r\n    this.props.loginUser(this.state, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { login, email, password, password2, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <form onSubmit={this.onSubmit} className=\"col-24 col-lg-12\">\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"login\" className=\"modal-form-label\">\r\n                Логин\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"login\"\r\n                id=\"login\"\r\n                value={login}\r\n                autoFocus={true}\r\n                onChange={this.onChange}\r\n                className=\"modal-form-control\"\r\n              />\r\n              <div className=\"modal-form-error\">{errors.login}</div>\r\n            </div>\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"email\" className=\"modal-form-label\">\r\n                E-mail\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                className=\"modal-form-control\"\r\n              />\r\n              <div className=\"modal-form-error\">{errors.email}</div>\r\n            </div>\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"password\" className=\"modal-form-label\">\r\n                Пароль\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={this.onChange}\r\n                className=\"modal-form-control\"\r\n              />\r\n              <div className=\"modal-form-error\">{errors.password}</div>\r\n            </div>\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"password2\" className=\"modal-form-label\">\r\n                Повторите пароль\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password2\"\r\n                id=\"password2\"\r\n                value={password2}\r\n                onChange={this.onChange}\r\n                className=\"modal-form-control\"\r\n              />\r\n              <div className=\"modal-form-error\">{errors.password}</div>\r\n            </div>\r\n            <button className=\"modal-form-btn\">Войти</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Register);\r\n","import React, { Component, Fragment } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { getCurrentProfile } from \"../../actions/userAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class User extends Component {\r\n  // static propTypes = {\r\n  // \tprop: PropTypes\r\n  // }\r\n\r\n  componentDidMount() {\r\n    const { isAuthenticated } = this.props.auth;\r\n\r\n    if (isAuthenticated) {\r\n      this.props.getCurrentProfile();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { isAuthenticated } = this.props.auth;\r\n\r\n    if (isAuthenticated !== prevProps.auth.isAuthenticated) {\r\n      this.props.getCurrentProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Fragment />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCurrentProfile }\r\n)(User);\r\n","import axios from \"axios\";\r\n\r\nimport { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\n// Get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n  axios\r\n    .get(\"/api/users/current\")\r\n    .then(res =>\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Profile extends Component {\r\n  // static propTypes = {\r\n  //   prop: PropTypes\r\n  // };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-10\">\r\n            <div className=\"profile-icon\">\r\n              <i className=\"far fa-user-circle\" />\r\n            </div>\r\n            <div className=\"profile-name\">{user.name}</div>\r\n            <div className=\"profile-orders\">\r\n              <div className=\"profile-orders-title\">Ваши заказы</div>\r\n              <div className=\"profile-orders-empty\">\r\n                Вы ещё нечего не заказали(\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getHomeData } from \"../../actions/homeAction\";\r\nimport { deleteCategory } from \"../../actions/categoriesAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Component\r\nimport PanelNavbar from \"./PanelNavbar\";\r\nimport Loader from \"../common/Loader\";\r\n\r\nclass Categories extends Component {\r\n  componentDidMount() {\r\n    this.props.getHomeData();\r\n  }\r\n\r\n  handleDelete = (e, id) => {\r\n    e.preventDefault();\r\n\r\n    this.props.deleteCategory(id);\r\n  };\r\n\r\n  render() {\r\n    const categories = this.props.home.categories\r\n      .slice()\r\n      .sort((a, b) => b.id - a.id);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-18\">\r\n            <PanelNavbar />\r\n          </div>\r\n          <div className=\"col-lg-6 d-flex justify-content-end\">\r\n            <Link to=\"/panel/categories/add\" className=\"panel-navbar-add\">\r\n              Добавить категорию\r\n            </Link>\r\n          </div>\r\n\r\n          {categories.length <= 0 ? (\r\n            <Loader />\r\n          ) : (\r\n            <div className=\"col-24\">\r\n              <table className=\"panel-table\">\r\n                <thead className=\"panel-table-head\">\r\n                  <tr>\r\n                    <th className=\"panel-table-head-item\">Номер</th>\r\n                    <th className=\"panel-table-head-item\">Изображение</th>\r\n                    <th className=\"panel-table-head-item\">Название</th>\r\n                    <th className=\"panel-table-head-item\">Действия</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"panel-table-body\">\r\n                  {categories.map((cat, id) => (\r\n                    <tr key={cat.id} className=\"panel-table-body-row\">\r\n                      <th className=\"panel-table-body-item\" data-label=\"Номер\">\r\n                        {cat.id}\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item image\"\r\n                        data-label=\"Изображение\"\r\n                      >\r\n                        <img src={`/img/${cat.img}`} alt=\"Img\" />\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item\"\r\n                        data-label=\"Название\"\r\n                      >\r\n                        {cat.name}\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item\"\r\n                        data-label=\"Действия\"\r\n                      >\r\n                        <Link\r\n                          to={`/panel/categories/edit/${cat.id}`}\r\n                          className=\"panel-table-body-item-increase\"\r\n                        >\r\n                          <i className=\"far fa-edit\" /> Изменить\r\n                        </Link>\r\n                        <span\r\n                          onClick={e => this.handleDelete(e, cat.id)}\r\n                          className=\"panel-table-body-item-delete\"\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" /> Удалить\r\n                        </span>\r\n                      </th>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  home: state.home\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getHomeData, deleteCategory }\r\n)(Categories);\r\n","import axios from \"axios\";\r\nimport { GET_CATEGORY } from \"./types\";\r\nimport { getHomeData } from \"./homeAction\";\r\n\r\nexport const addCategory = (data, history) => dispatch => {\r\n  axios.post(\"/api/categories/add\", data).then(res => {\r\n    if (res.data.success === true) {\r\n      history.push(\"/panel/categories\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCategory = id => (dispatch, getState) => {\r\n  axios.get(`/api/categories/${id}`).then(res => {\r\n    dispatch({\r\n      type: GET_CATEGORY,\r\n      payload: res.data.category\r\n    });\r\n  });\r\n};\r\n\r\nexport const editCategory = (id, data, history) => dispatch => {\r\n  axios.put(`/api/categories/${id}`, data).then(res => {\r\n    history.push(\"/panel/categories\");\r\n  });\r\n};\r\n\r\nexport const deleteCategory = id => dispatch => {\r\n  axios.delete(`/api/categories/${id}`).then(res => {\r\n    dispatch(getHomeData());\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport Cropper from \"react-cropper\";\r\nimport { addCategory } from \"../../actions/categoriesAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Components\r\nimport PanelNavbar from \"../Panel/PanelNavbar\";\r\n\r\nexport class AddCategory extends Component {\r\n  // static propTypes = {\r\n  //   prop: PropTypes\r\n  // };\r\n\r\n  state = {\r\n    name: \"\",\r\n    image: null,\r\n    file: null,\r\n    errors: {},\r\n    ready: false\r\n  };\r\n\r\n  crop = () => {\r\n    this.setState({ image: this.refs.cropper.getCroppedCanvas().toDataURL() });\r\n  };\r\n\r\n  handleFileChange = e => {\r\n    this.setState({\r\n      file: URL.createObjectURL(e.target.files[0]),\r\n      ready: true\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, image } = this.state;\r\n\r\n    this.props.addCategory(\r\n      {\r\n        name,\r\n        image\r\n      },\r\n      this.props.history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, file, errors, ready } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-24\">\r\n            <PanelNavbar />\r\n          </div>\r\n\r\n          <form className=\"col-24 panel-edit\" onSubmit={this.onSubmit}>\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-8\">\r\n                <div className=\"modal-form-group\">\r\n                  <label htmlFor=\"name\" className=\"modal-form-label\">\r\n                    Название\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Название\"\r\n                    autoFocus={true}\r\n                    onChange={this.onChange}\r\n                    autoComplete=\"off\"\r\n                    className=\"modal-form-control\"\r\n                  />\r\n                  <div className=\"modal-form-error\">{errors.name}</div>\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"file\"\r\n                    className=\"panel-edit-upload panel-navbar-add\"\r\n                  >\r\n                    Загрузить превью\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"file\"\r\n                    onChange={this.handleFileChange}\r\n                    className=\"d-none\"\r\n                  />\r\n                </div>\r\n                <div className=\"panel-edit-image\">\r\n                  <Cropper\r\n                    ref=\"cropper\"\r\n                    src={file}\r\n                    viewMode={2}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      maxWidth: \"100%\",\r\n                      margin: \"0 auto\",\r\n                      maxHeight: \"230px\"\r\n                    }}\r\n                    aspectRatio={4 / 4}\r\n                    guides={false}\r\n                    cropend={this.crop}\r\n                    ready={this.crop}\r\n                  />\r\n                </div>\r\n                {ready && (\r\n                  <div className=\"modal-form-group\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"panel-edit-upload panel-navbar-add\"\r\n                    >\r\n                      Добавить категирию\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  home: state.home\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addCategory }\r\n)(AddCategory);\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from 'prop-types'\r\nimport Cropper from \"react-cropper\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCategory, editCategory } from \"../../actions/categoriesAction\";\r\nimport isEmpty from \"../../validation/isEmpty\";\r\n\r\nexport class EditCategory extends Component {\r\n  // static propTypes = {\r\n  // \tprop: PropTypes\r\n  // }\r\n  state = {\r\n    name: \"\",\r\n    img: \"\",\r\n    file: \"\",\r\n    image: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  crop = () => {\r\n    this.setState({ image: this.refs.cropper.getCroppedCanvas().toDataURL() });\r\n  };\r\n\r\n  handleFileChange = e => {\r\n    this.setState({\r\n      file: URL.createObjectURL(e.target.files[0])\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getCategory(this.props.match.params.id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { category } = this.props.panel;\r\n    const { name } = this.state;\r\n\r\n    if (\r\n      !isEmpty(category) &&\r\n      name !== category.name &&\r\n      category !== prevProps.panel.category\r\n    ) {\r\n      this.setState({ name: category.name, img: `/img/${category.img}` });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, price, image, catId } = this.state;\r\n    const { history, panel } = this.props;\r\n\r\n    this.props.editCategory(\r\n      panel.category.id,\r\n      { name, price, image, catId },\r\n      history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, img, file, image, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"row justify-content-center\" onSubmit={this.onSubmit}>\r\n          <div className=\"col-lg-9\">\r\n            <div className=\"modal-form-group\">\r\n              <label htmlFor=\"name\" className=\"modal-form-label\">\r\n                Название\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={name}\r\n                placeholder=\"Название\"\r\n                autoFocus={true}\r\n                onChange={this.onChange}\r\n                autoComplete=\"off\"\r\n                className=\"modal-form-control\"\r\n              />\r\n              <div className=\"modal-form-error\">{errors.name}</div>\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"file\"\r\n                className=\"panel-edit-file panel-navbar-add\"\r\n              >\r\n                Загрузить превью\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"file\"\r\n                onChange={this.handleFileChange}\r\n                className=\"d-none\"\r\n              />\r\n            </div>\r\n            <div className=\"panel-edit-image\">\r\n              <Cropper\r\n                ref=\"cropper\"\r\n                src={file}\r\n                viewMode={2}\r\n                style={{\r\n                  width: \"100%\",\r\n                  maxWidth: \"100%\",\r\n                  margin: \"0 auto\",\r\n                  maxHeight: \"230px\"\r\n                }}\r\n                aspectRatio={4 / 4}\r\n                guides={false}\r\n                cropend={this.crop}\r\n                ready={this.crop}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-8\">\r\n            <div className=\"panel-edit-preview\">\r\n              <img src={isEmpty(image) ? img : image} alt=\"img\" />\r\n            </div>\r\n            <div className=\"modal-form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"panel-edit-upload panel-navbar-add\"\r\n              >\r\n                Изменить категирию\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  panel: state.panel\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCategory, editCategory }\r\n)(EditCategory);\r\n","import React, { Component } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport isEmpty from \"../../validation/isEmpty\";\r\n\r\nexport class CartForm extends Component {\r\n  render() {\r\n    const { errors, touched, isSubmitting, cart } = this.props;\r\n\r\n    return (\r\n      <Form className=\"col-24 row\">\r\n        <div className=\"col-24 col-lg-12\">\r\n          <div className=\"modal-form-group\">\r\n            <label htmlFor=\"date\" className=\"modal-form-label\">\r\n              Дата<span className=\"modal-form-label-required\">*</span>\r\n            </label>\r\n            <Field\r\n              type=\"date\"\r\n              id=\"date\"\r\n              name=\"date\"\r\n              className=\"modal-form-control\"\r\n            />\r\n            {errors.cartNotEmpty && (\r\n              <div className=\"modal-form-error\">{errors.cartNotEmpty}</div>\r\n            )}\r\n            {errors.date && touched.date && (\r\n              <div className=\"modal-form-error\">{errors.date}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"modal-form-group\">\r\n            <label htmlFor=\"time\" className=\"modal-form-label\">\r\n              Время<span className=\"modal-form-label-required\">*</span>\r\n            </label>\r\n            <Field\r\n              type=\"time\"\r\n              id=\"time\"\r\n              name=\"time\"\r\n              className=\"modal-form-control\"\r\n            />\r\n            {errors.time && touched.time && (\r\n              <div className=\"modal-form-error\">{errors.time}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"modal-form-group\">\r\n            <label htmlFor=\"phone\" className=\"modal-form-label\">\r\n              Телефон\r\n              <span className=\"modal-form-label-required\">*</span>\r\n            </label>\r\n            <Field\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              id=\"phone\"\r\n              placeholder=\"Ваш номер телефона\"\r\n              className=\"modal-form-control\"\r\n            />\r\n            {errors.phone && touched.phone && (\r\n              <div className=\"modal-form-error\">{errors.phone}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-24 col-lg-12\">\r\n          <div className=\"modal-form-group\">\r\n            <label htmlFor=\"customersCount\" className=\"modal-form-label\">\r\n              Кол-во человек\r\n              <span className=\"modal-form-label-required\">*</span>\r\n            </label>\r\n            <Field\r\n              type=\"text\"\r\n              id=\"customersCount\"\r\n              name=\"customersCount\"\r\n              placeholder=\"Кол-во человек\"\r\n              className=\"modal-form-control\"\r\n            />\r\n            {errors.customersCount && touched.customersCount && (\r\n              <div className=\"modal-form-error\">{errors.customersCount}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"modal-form-group\">\r\n            <label htmlFor=\"comment\" className=\"modal-form-label\">\r\n              Комментарий к заказу\r\n            </label>\r\n            <Field\r\n              component=\"textarea\"\r\n              name=\"comment\"\r\n              id=\"comment\"\r\n              className=\"modal-form-control\"\r\n              placeholder=\"Личные пожелания..\"\r\n            />\r\n            {errors.comment && touched.comment && (\r\n              <div className=\"modal-form-error\">{errors.comment}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"cart-total\">\r\n            {cart.success && (\r\n              <div className=\"col-24 cart-total-success\">\r\n                Заказ сделан успешно, спасибо)\r\n              </div>\r\n            )}\r\n            <span>\r\n              Итоговая стоимость: {cart.totalPrice}{\" \"}\r\n              <i className=\"far fa-ruble-sign\" />\r\n            </span>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"cart-order-btn\"\r\n            >\r\n              Заказать\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cart: state.cart,\r\n  home: state.home\r\n});\r\n\r\nconst phoneRegExp = /^((\\+7|7|8)+([0-9]){10})$/;\r\n\r\nconst cartSchema = Yup.object().shape({\r\n  cartNotEmpty: Yup.boolean().oneOf([true], \"Корзина пустая\"),\r\n  date: Yup.date().required(\"Дата пустая\"),\r\n  time: Yup.string().required(\"Время пустое\"),\r\n  phone: Yup.string()\r\n    .matches(phoneRegExp, \"Не валидный номер телефона, 89543028277\")\r\n    .required(\"Телефон пустой\"),\r\n  customersCount: Yup.number()\r\n    .typeError(\"Допустимы только цифры\")\r\n    .min(1, \"Минимум 1 человек\")\r\n    .required(\"Кол-во человек пустое\"),\r\n  comment: Yup.string().max(255, \"Не более 255 символов\")\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  withFormik({\r\n    mapPropsToValues: ({ cart }) => ({\r\n      cartNotEmpty: !isEmpty(cart.cart),\r\n      date: \"\",\r\n      time: \"\",\r\n      phone: \"\",\r\n      customersCount: \"\",\r\n      comment: \"\"\r\n    }),\r\n    validationSchema: cartSchema,\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n      props.onSubmit(values);\r\n    }\r\n  })\r\n)(CartForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteFromCart,\r\n  increaseCart,\r\n  decreaseCart\r\n} from \"../../actions/cartAction\";\r\nimport { addOrder } from \"../../actions/ordersAction\";\r\n\r\n// Components\r\nimport CartForm from \"./CartForm\";\r\n\r\nexport class CartPage extends Component {\r\n  onSubmit = values => {\r\n    const { cart, totalPrice } = this.props.cart;\r\n\r\n    this.props.addOrder({ items: cart, amount: totalPrice, ...values });\r\n  };\r\n\r\n  render() {\r\n    const { cart } = this.props.cart;\r\n    const { products } = this.props.home;\r\n    const { deleteFromCart, increaseCart, decreaseCart } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-24\">\r\n            <div className=\"categories-title\">Корзина</div>\r\n          </div>\r\n          <div className=\"col-24\">\r\n            {cart.length <= 0 ? (\r\n              <div className=\"panel-table-empty\">Ваша корзина пуста</div>\r\n            ) : (\r\n              <table className=\"panel-table\">\r\n                <thead className=\"panel-table-head\">\r\n                  <tr>\r\n                    <th className=\"panel-table-head-item\">Номер</th>\r\n                    <th className=\"panel-table-head-item\">Изображение</th>\r\n                    <th className=\"panel-table-head-item\">Название</th>\r\n                    <th className=\"panel-table-head-item\">Количетсво</th>\r\n                    <th className=\"panel-table-head-item\">Действия</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"panel-tabel-body\">\r\n                  {cart.map((cart, id) => {\r\n                    const cartItem = products.find(p => p.id === cart.id);\r\n                    return (\r\n                      <tr key={id} className=\"panel-table-body-row\">\r\n                        <th\r\n                          className=\"panel-table-body-item\"\r\n                          data-label=\"Номер\"\r\n                        >\r\n                          {id + 1}\r\n                        </th>\r\n                        <th\r\n                          className=\"panel-table-body-item image\"\r\n                          data-label=\"Изображение\"\r\n                        >\r\n                          <img\r\n                            src={`/img/${cartItem.img}`}\r\n                            alt={cartItem.name}\r\n                          />\r\n                        </th>\r\n                        <th\r\n                          className=\"panel-table-body-item\"\r\n                          data-label=\"Название\"\r\n                        >\r\n                          {cartItem.name}\r\n                        </th>\r\n                        <th\r\n                          className=\"panel-table-body-item\"\r\n                          data-label=\"Количество\"\r\n                        >\r\n                          {cart.quantity}\r\n                        </th>\r\n                        <th\r\n                          className=\"panel-table-body-item\"\r\n                          data-label=\"Действия\"\r\n                        >\r\n                          <span\r\n                            className=\"panel-table-body-item-increase\"\r\n                            onClick={e => increaseCart(cartItem.id)}\r\n                          >\r\n                            <i className=\"far fa-plus\" /> 1 Шт\r\n                          </span>\r\n                          <span\r\n                            className=\"panel-table-body-item-decrease\"\r\n                            onClick={e => decreaseCart(cartItem.id)}\r\n                          >\r\n                            <i className=\"far fa-minus\" /> 1 Шт\r\n                          </span>\r\n                          <span\r\n                            className=\"panel-table-body-item-delete\"\r\n                            onClick={e => deleteFromCart(cartItem.id)}\r\n                          >\r\n                            <i className=\"far fa-trash-alt\" /> Удалить\r\n                          </span>\r\n                        </th>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </div>\r\n\r\n          <CartForm onSubmit={this.onSubmit} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cart: state.cart,\r\n  home: state.home\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteFromCart, increaseCart, decreaseCart, addOrder }\r\n)(CartPage);\r\n","import axios from \"axios\";\r\nimport { GET_ORDERS, SUCCESS_CART } from \"./types\";\r\n\r\nexport const getOrders = () => dispatch => {\r\n  axios.get(\"/api/orders\").then(res => {\r\n    dispatch({\r\n      type: GET_ORDERS,\r\n      payload: res.data.orders\r\n    });\r\n  });\r\n};\r\n\r\nexport const addOrder = data => (dispatch, getState) => {\r\n  axios.post(\"/api/orders\", data).then(res => {\r\n    dispatch({\r\n      type: SUCCESS_CART\r\n    });\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { getHomeData } from \"../../actions/homeAction\";\r\nimport { deleteProduct } from \"../../actions/productAction\";\r\nimport { getOrders } from \"../../actions/ordersAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Component\r\nimport PanelNavbar from \"../Panel/PanelNavbar\";\r\nimport Loader from \"../common/Loader\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.getOrders();\r\n    this.props.getHomeData();\r\n  }\r\n\r\n  handleDelete = (e, id) => {\r\n    e.preventDefault();\r\n    this.props.deleteProduct(id);\r\n  };\r\n\r\n  render() {\r\n    const products = this.props.home.products\r\n      .slice()\r\n      .sort((a, b) => b.id - a.id);\r\n    const { orders } = this.props.panel;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-24 col-lg-18\">\r\n            <PanelNavbar />\r\n          </div>\r\n\r\n          <div className=\"col-24\">\r\n            {orders !== null ? (\r\n              <table className=\"panel-table\">\r\n                <thead className=\"panel-table-head\">\r\n                  <tr>\r\n                    <th className=\"panel-table-head-item\">Номер</th>\r\n                    <th className=\"panel-table-head-item\">Товары</th>\r\n                    <th className=\"panel-table-head-item\">Телефон</th>\r\n                    <th className=\"panel-table-head-item\">Кол-во</th>\r\n                    <th className=\"panel-table-head-item\">Комментарий</th>\r\n                    <th className=\"panel-table-head-item\">Стоимость</th>\r\n                    <th className=\"panel-table-head-item\">Дата</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"panel-table-body\">\r\n                  {orders.map((order, id) => (\r\n                    <tr key={order.id} className=\"panel-table-body-row\">\r\n                      <th className=\"panel-table-body-item\" data-label=\"Номер\">\r\n                        {order.id}\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item image masonry\"\r\n                        data-label=\"Товары\"\r\n                      >\r\n                        {order.items.map((item, iId) => {\r\n                          const prod =\r\n                            products.length !== 0 &&\r\n                            products.find(p => p.id === item.productId);\r\n\r\n                          return (\r\n                            <div\r\n                              key={iId}\r\n                              className=\"panel-table-body-item-masonry\"\r\n                            >\r\n                              <img src={`/img/${prod.img}`} alt={prod.name} />\r\n                              <span className=\"panel-table-body-item-masonry-row\">\r\n                                {prod.name}\r\n                              </span>\r\n                              <span className=\"panel-table-body-item-masonry-row\">\r\n                                {prod.price} <i className=\"far fa-ruble-sign\" />\r\n                              </span>\r\n                              <span className=\"panel-table-body-item-masonry-row\">\r\n                                {item.quantity} Шт.\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item\"\r\n                        data-label=\"Телефон\"\r\n                      >\r\n                        {order.phone ? order.phone : \"Пусто\"}\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item\"\r\n                        data-label=\"Кол-во чел.\"\r\n                      >\r\n                        {order.customersCount} Чел.\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item\"\r\n                        data-label=\"Комментарий\"\r\n                      >\r\n                        {order.comment ? order.comment : \"Пусто\"}\r\n                      </th>\r\n                      <th\r\n                        className=\"panel-table-body-item\"\r\n                        data-label=\"Стоимость\"\r\n                      >\r\n                        {order.amount} <i className=\"far fa-ruble-sign\" />\r\n                      </th>\r\n                      <th className=\"panel-table-body-item\" data-label=\"Дата\">\r\n                        {new Date(order.orderedOn).toLocaleString()}\r\n                      </th>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            ) : (\r\n              <Loader />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  home: state.home,\r\n  panel: state.panel\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getHomeData, deleteProduct, getOrders }\r\n)(Orders);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div className=\"nomatch\">\r\n      <div>404</div>\r\n      <div className=\"nomatch-title\">Такой страницы не найдено(</div>\r\n      <Link to=\"/\">На главную</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport createHistory from \"history/createBrowserHistory\";\nimport jwt_decode from \"jwt-decode\";\nimport \"cropperjs/dist/cropper.css\";\nimport \"./sass/main.sass\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser } from \"./actions/authAction\";\n\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store\";\n\n// Components\nimport Header from \"./components/layouts/Header\";\nimport Home from \"./components/layouts/Home\";\nimport Panel from \"./components/Panel/Panel\";\nimport AddProduct from \"./components/Products/AddProduct\";\nimport EditProduct from \"./components/Products/EditProduct\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport User from \"./components/common/User\";\nimport Profile from \"./components/Profile/Profile\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport Categories from \"./components/Panel/Categories\";\nimport AddCategory from \"./components/Categories/AddCategory\";\nimport EditCategory from \"./components/Categories/EditCategory\";\nimport CartPage from \"./components/Cart/CartPage\";\nimport Orders from \"./components/Orders/Orders\";\nimport NoMatch from \"./components/layouts/NoMatch\";\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  Store.dispatch(setCurrentUser(decoded));\n}\n\nconst history = createHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <Router history={history}>\n          <div>\n            <Header />\n            <User />\n\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/cart\" component={CartPage} />\n              <PrivateRoute exact path=\"/profile\" component={Profile} />\n              <PrivateRoute exact path=\"/panel\" component={Panel} />\n              <PrivateRoute\n                exact\n                path=\"/panel/products/add\"\n                component={AddProduct}\n              />\n              <PrivateRoute\n                exact\n                path=\"/panel/products/edit/:id\"\n                component={EditProduct}\n              />\n              <PrivateRoute\n                exact\n                path=\"/panel/categories\"\n                component={Categories}\n              />\n              <PrivateRoute\n                exact\n                path=\"/panel/categories/add\"\n                component={AddCategory}\n              />\n              <PrivateRoute\n                exact\n                path=\"/panel/categories/edit/:id\"\n                component={EditCategory}\n              />\n              <PrivateRoute exact path=\"/panel/orders\" component={Orders} />\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}